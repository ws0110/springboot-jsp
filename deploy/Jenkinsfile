pipeline {
    agent any

    tools {
        jdk 'JAVA_8'
        maven "MAVEN_3.8.1"
    }

    stages {
        
        stage('checkout'){
            steps {
                echo 'start checkout...'
                checkout ([
                    $class: 'GitSCM',
                    // branches: [[name: "${params.TAGS}" ]],
                    branches: [[name: '*/master']], 
                    userRemoteConfigs: [[
                        credentialsId: 'github_account', 
                        url: 'https://github.com/ws0110/springboot-jsp.git']]
                ])
            }
        }
        stage('build'){
            steps {
                echo 'start build...'
                sh "mvn -Dmaven.test.skip=true clean package"
            }
        }
        // 생략
        // stage('test'){
        //     steps {
        //         echo 'start test...'
        //         sh "mvn -B -Dmaven.test.failure.ignore verify"
        //         step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
                
        //     }
        // }

        stage('deploy'){
            environment {
                TARGET_SERVER = "ec2-user@3.37.86.195"
            }
            steps{
                echo 'start deploy...'
                sshagent(['tomcat_ssh']) {
                    //sh "ssh -o StrictHostKeyChecking=no ${TARGET_SERVER} uptime"
                    sh "scp -r target/*.war ${TARGET_SERVER}:/home/ec2-user/build"
                    sh "scp -r deploy/*.sh ${TARGET_SERVER}:/home/ec2-user"
                    sh "ssh ${TARGET_SERVER} 'sh /home/ec2-user/deploy.sh'"
                }
            }
        }
    }
    
    post {
        always {
            echo 'jenkinsfile done...'
        }
        success {
            echo 'success!!'
            slackSend message: 'success!!', color: '#00FF00'
        }
        failure {
            echo 'failure!!'
            slackSend message: 'failure!!', color: '#FF0000'
        }
    }

}
